"""Initial persistence schema

Revision ID: 873438dcca41
Revises: 098d38054bc1
Create Date: 2025-09-29 18:09:21.850159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '873438dcca41'
down_revision: Union[str, Sequence[str], None] = '098d38054bc1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('demographics', sa.JSON(), nullable=True),
    sa.Column('consent_given', sa.Boolean(), nullable=False),
    sa.Column('consent_version', sa.String(length=20), nullable=False),
    sa.Column('consent_given_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("consent_version ~ '^\\d+\\.\\d+$'", name='ck_profiles_consent_version_format'),
    sa.CheckConstraint("email ~ '^[^@]+@[^@]+\\.[^@]+$'", name='ck_profiles_email_format'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_profiles_consent_given', 'profiles', ['consent_given'], unique=False)
    op.create_index('idx_profiles_user_id_created_at', 'profiles', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_profiles_created_at'), 'profiles', ['created_at'], unique=False)
    op.create_index(op.f('ix_profiles_email'), 'profiles', ['email'], unique=True)
    op.create_index(op.f('ix_profiles_user_id'), 'profiles', ['user_id'], unique=True)
    op.create_table('analyses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed', name='analysis_status'), nullable=False),
    sa.Column('raw_biomarkers', sa.JSON(), nullable=True),
    sa.Column('questionnaire_data', sa.JSON(), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.Column('analysis_version', sa.String(length=20), nullable=False),
    sa.Column('pipeline_version', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("analysis_version ~ '^\\d+\\.\\d+\\.\\d+$'", name='ck_analyses_version_format'),
    sa.CheckConstraint("pipeline_version ~ '^\\d+\\.\\d+\\.\\d+$'", name='ck_analyses_pipeline_version_format'),
    sa.CheckConstraint('processing_time_seconds >= 0', name='ck_analyses_processing_time_positive'),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_analyses_analysis_version', 'analyses', ['analysis_version'], unique=False)
    op.create_index('idx_analyses_completed_at', 'analyses', ['completed_at'], unique=False)
    op.create_index('idx_analyses_user_id_created_at', 'analyses', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_analyses_user_id_status', 'analyses', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_analyses_completed_at'), 'analyses', ['completed_at'], unique=False)
    op.create_index(op.f('ix_analyses_created_at'), 'analyses', ['created_at'], unique=False)
    op.create_index(op.f('ix_analyses_status'), 'analyses', ['status'], unique=False)
    op.create_index(op.f('ix_analyses_user_id'), 'analyses', ['user_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('request_id', sa.String(length=100), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('outcome', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("outcome IN ('success', 'failure', 'partial')", name='ck_audit_logs_outcome_valid'),
    sa.CheckConstraint("severity IN ('info', 'warning', 'error', 'critical')", name='ck_audit_logs_severity_valid'),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_outcome', 'audit_logs', ['outcome'], unique=False)
    op.create_index('idx_audit_logs_resource_type', 'audit_logs', ['resource_type'], unique=False)
    op.create_index('idx_audit_logs_session_id', 'audit_logs', ['session_id'], unique=False)
    op.create_index('idx_audit_logs_severity', 'audit_logs', ['severity'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_index('idx_audit_logs_user_id_created_at', 'audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_outcome'), 'audit_logs', ['outcome'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_session_id'), 'audit_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_severity'), 'audit_logs', ['severity'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('consents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('consent_type', sa.String(length=50), nullable=False),
    sa.Column('granted', sa.Boolean(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('consent_text', sa.Text(), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("consent_type IN ('data_processing', 'marketing', 'analytics', 'third_party')", name='ck_consents_type_valid'),
    sa.CheckConstraint("legal_basis IN ('consent', 'legitimate_interest', 'contract', 'legal_obligation')", name='ck_consents_legal_basis_valid'),
    sa.CheckConstraint("version ~ '^\\d+\\.\\d+$'", name='ck_consents_version_format'),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_consents_created_at', 'consents', ['created_at'], unique=False)
    op.create_index('idx_consents_granted', 'consents', ['granted'], unique=False)
    op.create_index('idx_consents_type', 'consents', ['consent_type'], unique=False)
    op.create_index('idx_consents_user_id', 'consents', ['user_id'], unique=False)
    op.create_index('idx_consents_user_id_type', 'consents', ['user_id', 'consent_type'], unique=False)
    op.create_index(op.f('ix_consents_consent_type'), 'consents', ['consent_type'], unique=False)
    op.create_index(op.f('ix_consents_created_at'), 'consents', ['created_at'], unique=False)
    op.create_index(op.f('ix_consents_granted'), 'consents', ['granted'], unique=False)
    op.create_index(op.f('ix_consents_user_id'), 'consents', ['user_id'], unique=False)
    op.create_table('deletion_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed', name='deletion_status'), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('requested_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('verification_method', sa.String(length=50), nullable=True),
    sa.Column('verification_completed', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("request_type IN ('full_deletion', 'data_export', 'consent_withdrawal')", name='ck_deletion_requests_type_valid'),
    sa.CheckConstraint("verification_method IN ('email', 'phone', 'id_document', 'manual_review')", name='ck_deletion_requests_verification_valid'),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_deletion_requests_completed_at', 'deletion_requests', ['completed_at'], unique=False)
    op.create_index('idx_deletion_requests_request_type', 'deletion_requests', ['request_type'], unique=False)
    op.create_index('idx_deletion_requests_requested_at', 'deletion_requests', ['requested_at'], unique=False)
    op.create_index('idx_deletion_requests_status', 'deletion_requests', ['status'], unique=False)
    op.create_index('idx_deletion_requests_user_id', 'deletion_requests', ['user_id'], unique=False)
    op.create_index('idx_deletion_requests_user_id_status', 'deletion_requests', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_deletion_requests_completed_at'), 'deletion_requests', ['completed_at'], unique=False)
    op.create_index(op.f('ix_deletion_requests_created_at'), 'deletion_requests', ['created_at'], unique=False)
    op.create_index(op.f('ix_deletion_requests_request_type'), 'deletion_requests', ['request_type'], unique=False)
    op.create_index(op.f('ix_deletion_requests_requested_at'), 'deletion_requests', ['requested_at'], unique=False)
    op.create_index(op.f('ix_deletion_requests_status'), 'deletion_requests', ['status'], unique=False)
    op.create_index(op.f('ix_deletion_requests_user_id'), 'deletion_requests', ['user_id'], unique=False)
    op.create_table('profiles_pii',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("phone_number ~ '^\\+?[1-9]\\d{1,14}$'", name='ck_profiles_pii_phone_format'),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_index('idx_profiles_pii_profile_id', 'profiles_pii', ['profile_id'], unique=False)
    op.create_table('analysis_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('biomarkers', sa.JSON(), nullable=True),
    sa.Column('clusters', sa.JSON(), nullable=True),
    sa.Column('insights', sa.JSON(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('risk_assessment', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('result_version', sa.String(length=50), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('processing_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("result_version ~ '^\\d+\\.\\d+\\.\\d+$'", name='ck_analysis_results_version_format'),
    sa.CheckConstraint('confidence_score >= 0 AND confidence_score <= 1', name='ck_analysis_results_confidence_range'),
    sa.CheckConstraint('overall_score >= 0 AND overall_score <= 1', name='ck_analysis_results_score_range'),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_analysis_results_analysis_id', 'analysis_results', ['analysis_id'], unique=False)
    op.create_index('idx_analysis_results_created_at', 'analysis_results', ['created_at'], unique=False)
    op.create_index('idx_analysis_results_overall_score', 'analysis_results', ['overall_score'], unique=False)
    op.create_index(op.f('ix_analysis_results_analysis_id'), 'analysis_results', ['analysis_id'], unique=True)
    op.create_index(op.f('ix_analysis_results_created_at'), 'analysis_results', ['created_at'], unique=False)
    op.create_index(op.f('ix_analysis_results_result_version'), 'analysis_results', ['result_version'], unique=False)
    op.create_table('biomarker_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('biomarker_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('percentile', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('reference_range', sa.JSON(), nullable=True),
    sa.Column('interpretation', sa.Text(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('health_system', sa.String(length=50), nullable=True),
    sa.Column('critical_flag', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('optimal', 'normal', 'elevated', 'low', 'critical')", name='ck_biomarker_scores_status_valid'),
    sa.CheckConstraint('confidence >= 0 AND confidence <= 1', name='ck_biomarker_scores_confidence_range'),
    sa.CheckConstraint('percentile >= 0 AND percentile <= 100', name='ck_biomarker_scores_percentile_range'),
    sa.CheckConstraint('score >= 0 AND score <= 1', name='ck_biomarker_scores_score_range'),
    sa.CheckConstraint('value >= 0', name='ck_biomarker_scores_value_positive'),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_biomarker_scores_analysis_biomarker', 'biomarker_scores', ['analysis_id', 'biomarker_name'], unique=False)
    op.create_index('idx_biomarker_scores_analysis_id', 'biomarker_scores', ['analysis_id'], unique=False)
    op.create_index('idx_biomarker_scores_biomarker_name', 'biomarker_scores', ['biomarker_name'], unique=False)
    op.create_index('idx_biomarker_scores_critical_flag', 'biomarker_scores', ['critical_flag'], unique=False)
    op.create_index('idx_biomarker_scores_health_system', 'biomarker_scores', ['health_system'], unique=False)
    op.create_index('idx_biomarker_scores_status', 'biomarker_scores', ['status'], unique=False)
    op.create_index(op.f('ix_biomarker_scores_analysis_id'), 'biomarker_scores', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_biomarker_scores_biomarker_name'), 'biomarker_scores', ['biomarker_name'], unique=False)
    op.create_index(op.f('ix_biomarker_scores_health_system'), 'biomarker_scores', ['health_system'], unique=False)
    op.create_index(op.f('ix_biomarker_scores_status'), 'biomarker_scores', ['status'], unique=False)
    op.create_table('clusters',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('cluster_name', sa.String(length=100), nullable=False),
    sa.Column('cluster_type', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('biomarkers', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('insights', sa.JSON(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('health_system', sa.String(length=50), nullable=True),
    sa.Column('algorithm_used', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("severity IN ('normal', 'mild', 'moderate', 'high', 'critical')", name='ck_clusters_severity_valid'),
    sa.CheckConstraint('confidence >= 0 AND confidence <= 1', name='ck_clusters_confidence_range'),
    sa.CheckConstraint('score >= 0 AND score <= 1', name='ck_clusters_score_range'),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_clusters_analysis_id', 'clusters', ['analysis_id'], unique=False)
    op.create_index('idx_clusters_analysis_type', 'clusters', ['analysis_id', 'cluster_type'], unique=False)
    op.create_index('idx_clusters_cluster_type', 'clusters', ['cluster_type'], unique=False)
    op.create_index('idx_clusters_health_system', 'clusters', ['health_system'], unique=False)
    op.create_index('idx_clusters_severity', 'clusters', ['severity'], unique=False)
    op.create_index(op.f('ix_clusters_analysis_id'), 'clusters', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_clusters_cluster_name'), 'clusters', ['cluster_name'], unique=False)
    op.create_index(op.f('ix_clusters_cluster_type'), 'clusters', ['cluster_type'], unique=False)
    op.create_index(op.f('ix_clusters_health_system'), 'clusters', ['health_system'], unique=False)
    op.create_index(op.f('ix_clusters_severity'), 'clusters', ['severity'], unique=False)
    op.create_table('exports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=True),
    sa.Column('export_type', sa.Enum('pdf', 'json', 'csv', name='export_type'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed', name='export_status'), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('download_url', sa.String(length=1000), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('file_size_bytes >= 0', name='ck_exports_file_size_positive'),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['profiles.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_exports_analysis_id', 'exports', ['analysis_id'], unique=False)
    op.create_index('idx_exports_created_at', 'exports', ['created_at'], unique=False)
    op.create_index('idx_exports_expires_at', 'exports', ['expires_at'], unique=False)
    op.create_index('idx_exports_export_type', 'exports', ['export_type'], unique=False)
    op.create_index('idx_exports_status', 'exports', ['status'], unique=False)
    op.create_index('idx_exports_user_id', 'exports', ['user_id'], unique=False)
    op.create_index('idx_exports_user_id_status', 'exports', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_exports_analysis_id'), 'exports', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_exports_completed_at'), 'exports', ['completed_at'], unique=False)
    op.create_index(op.f('ix_exports_created_at'), 'exports', ['created_at'], unique=False)
    op.create_index(op.f('ix_exports_export_type'), 'exports', ['export_type'], unique=False)
    op.create_index(op.f('ix_exports_status'), 'exports', ['status'], unique=False)
    op.create_index(op.f('ix_exports_user_id'), 'exports', ['user_id'], unique=False)
    op.create_table('insights',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('insight_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('actionable', sa.Boolean(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('biomarkers_involved', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('health_system', sa.String(length=50), nullable=True),
    sa.Column('evidence', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("priority IN ('low', 'medium', 'high', 'critical')", name='ck_insights_priority_valid'),
    sa.CheckConstraint("severity IN ('normal', 'mild', 'moderate', 'high', 'critical')", name='ck_insights_severity_valid'),
    sa.CheckConstraint('confidence >= 0 AND confidence <= 1', name='ck_insights_confidence_range'),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_insights_actionable', 'insights', ['actionable'], unique=False)
    op.create_index('idx_insights_analysis_category', 'insights', ['analysis_id', 'category'], unique=False)
    op.create_index('idx_insights_analysis_id', 'insights', ['analysis_id'], unique=False)
    op.create_index('idx_insights_category', 'insights', ['category'], unique=False)
    op.create_index('idx_insights_health_system', 'insights', ['health_system'], unique=False)
    op.create_index('idx_insights_priority', 'insights', ['priority'], unique=False)
    op.create_index('idx_insights_severity', 'insights', ['severity'], unique=False)
    op.create_index(op.f('ix_insights_analysis_id'), 'insights', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_insights_category'), 'insights', ['category'], unique=False)
    op.create_index(op.f('ix_insights_health_system'), 'insights', ['health_system'], unique=False)
    op.create_index(op.f('ix_insights_insight_type'), 'insights', ['insight_type'], unique=False)
    op.create_index(op.f('ix_insights_priority'), 'insights', ['priority'], unique=False)
    op.create_index(op.f('ix_insights_severity'), 'insights', ['severity'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_insights_severity'), table_name='insights')
    op.drop_index(op.f('ix_insights_priority'), table_name='insights')
    op.drop_index(op.f('ix_insights_insight_type'), table_name='insights')
    op.drop_index(op.f('ix_insights_health_system'), table_name='insights')
    op.drop_index(op.f('ix_insights_category'), table_name='insights')
    op.drop_index(op.f('ix_insights_analysis_id'), table_name='insights')
    op.drop_index('idx_insights_severity', table_name='insights')
    op.drop_index('idx_insights_priority', table_name='insights')
    op.drop_index('idx_insights_health_system', table_name='insights')
    op.drop_index('idx_insights_category', table_name='insights')
    op.drop_index('idx_insights_analysis_id', table_name='insights')
    op.drop_index('idx_insights_analysis_category', table_name='insights')
    op.drop_index('idx_insights_actionable', table_name='insights')
    op.drop_table('insights')
    op.drop_index(op.f('ix_exports_user_id'), table_name='exports')
    op.drop_index(op.f('ix_exports_status'), table_name='exports')
    op.drop_index(op.f('ix_exports_export_type'), table_name='exports')
    op.drop_index(op.f('ix_exports_created_at'), table_name='exports')
    op.drop_index(op.f('ix_exports_completed_at'), table_name='exports')
    op.drop_index(op.f('ix_exports_analysis_id'), table_name='exports')
    op.drop_index('idx_exports_user_id_status', table_name='exports')
    op.drop_index('idx_exports_user_id', table_name='exports')
    op.drop_index('idx_exports_status', table_name='exports')
    op.drop_index('idx_exports_export_type', table_name='exports')
    op.drop_index('idx_exports_expires_at', table_name='exports')
    op.drop_index('idx_exports_created_at', table_name='exports')
    op.drop_index('idx_exports_analysis_id', table_name='exports')
    op.drop_table('exports')
    op.drop_index(op.f('ix_clusters_severity'), table_name='clusters')
    op.drop_index(op.f('ix_clusters_health_system'), table_name='clusters')
    op.drop_index(op.f('ix_clusters_cluster_type'), table_name='clusters')
    op.drop_index(op.f('ix_clusters_cluster_name'), table_name='clusters')
    op.drop_index(op.f('ix_clusters_analysis_id'), table_name='clusters')
    op.drop_index('idx_clusters_severity', table_name='clusters')
    op.drop_index('idx_clusters_health_system', table_name='clusters')
    op.drop_index('idx_clusters_cluster_type', table_name='clusters')
    op.drop_index('idx_clusters_analysis_type', table_name='clusters')
    op.drop_index('idx_clusters_analysis_id', table_name='clusters')
    op.drop_table('clusters')
    op.drop_index(op.f('ix_biomarker_scores_status'), table_name='biomarker_scores')
    op.drop_index(op.f('ix_biomarker_scores_health_system'), table_name='biomarker_scores')
    op.drop_index(op.f('ix_biomarker_scores_biomarker_name'), table_name='biomarker_scores')
    op.drop_index(op.f('ix_biomarker_scores_analysis_id'), table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_status', table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_health_system', table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_critical_flag', table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_biomarker_name', table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_analysis_id', table_name='biomarker_scores')
    op.drop_index('idx_biomarker_scores_analysis_biomarker', table_name='biomarker_scores')
    op.drop_table('biomarker_scores')
    op.drop_index(op.f('ix_analysis_results_result_version'), table_name='analysis_results')
    op.drop_index(op.f('ix_analysis_results_created_at'), table_name='analysis_results')
    op.drop_index(op.f('ix_analysis_results_analysis_id'), table_name='analysis_results')
    op.drop_index('idx_analysis_results_overall_score', table_name='analysis_results')
    op.drop_index('idx_analysis_results_created_at', table_name='analysis_results')
    op.drop_index('idx_analysis_results_analysis_id', table_name='analysis_results')
    op.drop_table('analysis_results')
    op.drop_index('idx_profiles_pii_profile_id', table_name='profiles_pii')
    op.drop_table('profiles_pii')
    op.drop_index(op.f('ix_deletion_requests_user_id'), table_name='deletion_requests')
    op.drop_index(op.f('ix_deletion_requests_status'), table_name='deletion_requests')
    op.drop_index(op.f('ix_deletion_requests_requested_at'), table_name='deletion_requests')
    op.drop_index(op.f('ix_deletion_requests_request_type'), table_name='deletion_requests')
    op.drop_index(op.f('ix_deletion_requests_created_at'), table_name='deletion_requests')
    op.drop_index(op.f('ix_deletion_requests_completed_at'), table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_user_id_status', table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_user_id', table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_status', table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_requested_at', table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_request_type', table_name='deletion_requests')
    op.drop_index('idx_deletion_requests_completed_at', table_name='deletion_requests')
    op.drop_table('deletion_requests')
    op.drop_index(op.f('ix_consents_user_id'), table_name='consents')
    op.drop_index(op.f('ix_consents_granted'), table_name='consents')
    op.drop_index(op.f('ix_consents_created_at'), table_name='consents')
    op.drop_index(op.f('ix_consents_consent_type'), table_name='consents')
    op.drop_index('idx_consents_user_id_type', table_name='consents')
    op.drop_index('idx_consents_user_id', table_name='consents')
    op.drop_index('idx_consents_type', table_name='consents')
    op.drop_index('idx_consents_granted', table_name='consents')
    op.drop_index('idx_consents_created_at', table_name='consents')
    op.drop_table('consents')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_severity'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_session_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_outcome'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_id_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_severity', table_name='audit_logs')
    op.drop_index('idx_audit_logs_session_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_resource_type', table_name='audit_logs')
    op.drop_index('idx_audit_logs_outcome', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_analyses_user_id'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_status'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_created_at'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_completed_at'), table_name='analyses')
    op.drop_index('idx_analyses_user_id_status', table_name='analyses')
    op.drop_index('idx_analyses_user_id_created_at', table_name='analyses')
    op.drop_index('idx_analyses_completed_at', table_name='analyses')
    op.drop_index('idx_analyses_analysis_version', table_name='analyses')
    op.drop_table('analyses')
    op.drop_index(op.f('ix_profiles_user_id'), table_name='profiles')
    op.drop_index(op.f('ix_profiles_email'), table_name='profiles')
    op.drop_index(op.f('ix_profiles_created_at'), table_name='profiles')
    op.drop_index('idx_profiles_user_id_created_at', table_name='profiles')
    op.drop_index('idx_profiles_consent_given', table_name='profiles')
    op.drop_table('profiles')
    # ### end Alembic commands ###
